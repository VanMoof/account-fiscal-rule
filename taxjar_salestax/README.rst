============================================
Taxjar integration for sales tax calculation
============================================

.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Faccount--fiscal--rule-lightgray.png?logo=github
    :target: https://github.com/OCA/account-fiscal-rule/tree/12.0/taxjar_salestax
    :alt: OCA/account-fiscal-rule
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/account-fiscal-rule-12-0/account-fiscal-rule-12-0-taxjar_salestax
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png
    :target: https://runbot.odoo-community.org/runbot/93/12.0
    :alt: Try me on Runbot

|badge1| |badge2| |badge3| |badge4| |badge5| 

This module fetches sales taxes on sale orders and invoices for transactions
within the USA using the TaxJar API. You will need to have a (paid) account
with TaxJar to use this module. It allows you to calculate the correct tax
amounts based on the origin and the destination locations of the transactions,
as well as (optionally) commiting transactions to TaxJar so that they can
take care of your tax filings.

See https://taxjar.com for more information.

**Table of contents**

.. contents::
   :local:

Installation
============

This module depends on another Odoo module from the OCA, 'queue_job' from
https://github.com/oca/queue.

This module requires that the 'taxjar' Python library
(https://pypi.org/project/taxjar) is made available in the
Python environment in which you run Odoo.

In order to run the automated tests, you need to install the 'responses'
Python library (https://pypi.org/project/responses).

Configuration
=============

To configure the API connection, go to the Financial Settings menu and look
for a menu item called "TaxJar API".

Create a new TaxJar API configuration with the details of your TaxJar account.
To be precise, you need to provide an API key for the TaxJar Service.
You need to create the configuration for the Odoo company to which it applies.
In the configuration, please select the countries to determine which orders
are in the scope of the TaxJar tax computation. By default, USA and Canada
are selected here.

There are two different modes to use the API:

* You can have TaxJar calculate the sales tax on your sale orders and sale
  invoices for transactions within a specific Odoo company, and additionally,
* you can have TaxJar declare your taxes, in which case the connector will
  also commit your orders in your TaxJar administration.

Both modes can be disabled in the API configuration.

When you have a working API configuration, you will want to import TaxJar
product codes to link to your products or product categories (if no code is
set on the product there is a fallback on the code of its category). The code
are passed with every order line with that product and it helps TaxJar to
decide which tax category a product belongs to.

Because the partner (address) on the warehouse is used in this module to
determine the origin that is passed to TaxJar, you need to configure these
warehouse addresses properly.

To determine the ledger account for the liable tax amounts, you need to
configure a native Odoo tax with name 'TaxJar' for each company that has a
TaxJar configuration. Please set the 'amount' of the tax to zero.

Usage
=====

US VAT in TaxJar is always a function of the origin address and the delivery
address. You can therefore select on each sale order which address is leading
to determine the delivery address, whereas the origin address is determined
by the address configured on the Odoo warehouse with a fallback on the company
partner.

For this purpose, there is a new warehouse field on the invoice so that it
can provide the correct origin address for invoices that are not linked to a
sale order. For invoices that are linked to a sale order, the warehouse on
the invoice form is ignored.

The destination address can be altered by changing the TaxJar policy on the
sale order. The options are to use the delivery address of the sale order, or
the warehouse address in the case of a shop/warehouse pickup by the customer.

For invoices linked to a sale order, the destination address used for tax
computation is taken from that sale order. For invoices that are not linked
to a sale order the destination is always the customer address on the invoice.

Tax amounts for orders or invoices are fetched for orders and invoices on
demand (clicking Update from TaxJar on the invoice form or the sale order
form), as well as on confirmation of the sale order and the invoice.

Note that the TaxJar tax amounts are collected regardless of the fiscal
position. No taxes need to be present on invoice or order lines. A dedicated
TaxJar placeholder tax will be added automatically.

TaxJar provides an address validation/autocompletion service. When enabled in
the configuration, partner addresses in the supported countries will be
validated and enriched automatically on creation, or on demand with a new
button on one of the tabs on the partner form.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/account-fiscal-rule/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us smashing it by providing a detailed and welcomed
`feedback <https://github.com/OCA/account-fiscal-rule/issues/new?body=module:%20taxjar_salestax%0Aversion:%2012.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Vanmoof B.V.
* Opener B.V.

Contributors
~~~~~~~~~~~~

* Stefan Rijnhart <stefan@opener.amsterdam> (https://opener.amsterdam)
* Martin Pishpecki <pishpecki@gmail.com> (https://www.vanmoof.com)
* Odoo Community Association: `Icon <https://github.com/OCA/maintainer-tools/blob/master/template/module/static/description/icon.svg>`_.


Other credits
~~~~~~~~~~~~~

Conceptually, this module was created based on our experiences with the 8.0
version of avalara_salestax by Kranbery/Gabriel Lopez.

The heavy lifting of th TaxJar integration is provided by the official Python
TaxJar integration library.

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/account-fiscal-rule <https://github.com/OCA/account-fiscal-rule/tree/12.0/taxjar_salestax>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
